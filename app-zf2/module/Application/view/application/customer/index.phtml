<div ng-app="myapp" ng-controller="CustomerController">
    <a class="btn btn-warning" href="<?php echo $this->url('customer', array('action' => 'add')); ?>">New customer</a>
    <br /><br />
    <?php echo $this->flashMessenger()->render('success', array('alert', 'alert-success')); ?>
    <?php
    $form->setAttribute('action', $this->url('customer', array('action' => 'index')));
    $form->setAttribute('id', $form->getName());
    $form->prepare();
    foreach ($form->getAttributes() as $key => $value) {
        $attibs [] = "$key='$value'";
    }
    ?>
    <form <?= implode(' ', $attibs) ?>>
        <div class="form-group">
            <?php echo $this->formElement($customerFieldset->get('label')); ?>
            <?php echo $this->formElementErrors($customerFieldset->get('label')); ?>
        </div>
        <div class="form-group">
            <?php echo $this->formElement($customerFieldset->get('address')); ?>
            <?php echo $this->formElementErrors($customerFieldset->get('address')); ?>
        </div>
        <div class="form-group">
            <?php echo $this->formElement($customerFieldset->get('country')); ?>
            <?php echo $this->formElementErrors($customerFieldset->get('country')); ?>
        </div>
        <div class="form-group">
            <?php echo $this->formElement($customerFieldset->get('date')); ?>
            <?php echo $this->formElementErrors($customerFieldset->get('date')); ?>
        </div>
        <?php
        echo $this->formSubmit($form->get('submit'));
        ?>
    </form>
    <br/>
    <div style="margin:.5em 0"><button class="btn">Rows count <span class="badge">{{count}}</span></button></div>
    <table id="dtable" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>ID</th>
                <th>Label</th>
                <th>Address</th>
                <th>First transaction date</th>
                <th>Country</th>
            </tr>
        </thead>
        <tbody>
            <tr ng-repeat="row in customers">
                <td><a href="/customer.edit.{{row.id}}">{{row.id}}</a></td>
                <td>{{ row.label}}</td>
                <td>{{ row.address}}</td>
                <td>{{ row.date}}</td>
                <td>{{ row.country}}</td>
            </tr>
        </tbody>
    </table>
    <div>
        <ul class="pagination">
            <li ng-class="{'disabled' : !pages.first}"><a ng-click="loadpage(pages.first)"><?= $this->escapeHtml('<<') ?></a></li>
            <li ng-class="{'disabled' : !pages.previous}"><a ng-click="loadpage(pages.previous)"><?= $this->escapeHtml('<') ?></a></li>
            <li ng-class="{'active' : page === pages.current}" ng-repeat="page in pages.pagesInRange"><a ng-click="loadpage(page)">{{page}}</a></li>
            <li ng-class="{'disabled' : !pages.next}"><a ng-click="loadpage(pages.next)"><?= $this->escapeHtml('>') ?></a></li>
            <li ng-class="{'disabled' : !pages.last}"><a ng-click="loadpage(pages.last)"><?= $this->escapeHtml('>>') ?></a></li>
        </ul>
    </div>
</div>
<script>
    var app = angular.module('myapp', []);
    app.config(function ($httpProvider, $provide) {
        // ajouter ce paramètre aux appels envoyés avec ajax pour pouvoir être détectés par AjaxContext
        $httpProvider.defaults.headers.common["X-Requested-With"] = 'XMLHttpRequest';
        // register the interceptor as a service
        $provide.factory('httpInterceptor', function ($q, $rootScope) {
            return {
                // optional method
                'request': function (config) {
                    $("#dtable").css('opacity', '0.3');
                    // do something on success
                    return config;
                },
                // optional method
                'requestError': function (rejection) {
                    // do something on error
                    if (canRecover(rejection)) {
                        return responseOrNewPromise
                    }
                    return $q.reject(rejection);
                },
                // optional method
                'response': function (response) {
                    $("#dtable").css('opacity', '1');
                    return response;
                },
                // optional method
                'responseError': function (rejection) {
                    // do something on error
                    if (canRecover(rejection)) {
                        return responseOrNewPromise
                    }
                    return $q.reject(rejection);
                }
            };
        });
        $httpProvider.interceptors.push('httpInterceptor');
    });
    app.controller('CustomerController', function ($scope, $http, $compile) {
        $scope.page = 1;
        $http.get('<?php echo $this->url('customer', array('action' => 'ajax-pages')) ?>', {params: {page: 1}}).success(
                function (response) {
                    $scope.customers = response.customers;
                    $scope.pages = response.pages;
                    $scope.count = response.count;
                });
        $scope.loadpage = function (page) {
            params = {
                label: $scope.label,
                address: $scope.address,
                date: $scope.date,
                country: $scope.country,
                page: page
            }
            $http.get('<?php echo $this->url('customer', array('action' => 'ajax-pages')) ?>', {params: params}).success(
                    function (response) {
                        $scope.customers = response.customers;
                        $scope.pages = response.pages;
                        $scope.count = response.count;
                    });
        }
        $scope.validateForm = function (event) {
            params = {
                label: $scope.label,
                address: $scope.address,
                date: $scope.date,
                country: $scope.country
            };
            $http.get('<?php echo $this->url('customer', array('action' => 'ajax-pages')) ?>', {params: params}).success(
                    function (response) {
                        $scope.customers = response.customers;
                        $scope.pages = response.pages;
                        $scope.count = response.count;
                    });
            event.preventDefault();
            return true;
        }

    });
</script>